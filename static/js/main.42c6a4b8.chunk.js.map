{"version":3,"sources":["components/LineGraph.js","components/Card.js","components/CovidSummary.js","axios.js","App.js","index.js"],"names":["LineGraph","props","style","width","height","margin","data","labels","datasets","label","yAxis","lineTension","fill","backgroundColor","borderColor","pointRadius","Card","title","card","className","value","displayType","thousandSeparator","CovidSummary","country","charAt","toUpperCase","slice","totalConfirmed","totalRecovered","totalDeaths","axiosInstance","axios","create","baseURL","App","useState","setTotalConfirmed","setTotalRecovered","setTotalDeaths","loading","setLoading","covidSummary","setCovidSummary","days","setDays","setCountry","coronaCount","setCoronaCount","useEffect","get","then","res","status","Global","TotalConfirmed","TotalRecovered","TotalDeaths","console","log","catch","error","getCoronaReportByDateRange","countrySlug","from","to","yAxisCoronaCount","map","d","Cases","covidDetails","Countries","find","Slug","err","formatDate","date","Date","year","getFullYear","month","getMonth","_date","getDate","display","alignItems","justifyContent","onChange","e","target","setDate","Country","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAgCeA,MA7Bf,SAAmBC,GACjB,OACE,qBACAC,MAAO,CACHC,MAAM,QACNC,OAAO,QACPC,OAAQ,aAJZ,SAOE,cAAC,IAAD,CACEC,KAAM,CACJC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,QAC5CC,SAAU,CACR,CACEC,MAAO,aACPH,KAAML,EAAMS,MACZC,YAAY,GACZC,MAAM,EACNC,gBAAiB,oBACjBC,YAAa,0BACbC,YAAY,U,QCpBX,SAASC,EAAT,GAA6B,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,KAEhC,OACI,qBAAKC,UAAU,OAAf,SACI,0CAAaF,EAAb,MAAsB,cAAC,IAAD,CACEG,MAAOF,EACPG,YAAa,OACbC,mBAAmB,SCWxCC,MAjBf,SAAsBtB,GAKlB,OACI,gCACI,mCAAwB,KAAlBA,EAAMuB,QAAiB,YAAcvB,EAAMuB,QAAQC,OAAO,GAAGC,cAAczB,EAAMuB,QAAQG,MAAM,GAArG,sBAEA,cAACX,EAAD,CAAMC,MAAM,YAAYC,KAAMjB,EAAM2B,iBACpC,cAACZ,EAAD,CAAMC,MAAM,YAAYC,KAAMjB,EAAM4B,iBACpC,cAACb,EAAD,CAAMC,MAAM,SAASC,KAAMjB,EAAM6B,kB,QCT9BC,E,OAJOC,EAAMC,OAAO,CAC/BC,QAAQ,+BCgHGC,MA7Gf,WAEA,MAA2CC,mBAAS,GAApD,mBAAOR,EAAP,KAAsBS,EAAtB,KACA,EAA2CD,mBAAS,GAApD,mBAAOP,EAAP,KAAsBS,EAAtB,KACA,EAAqCF,mBAAS,GAA9C,mBAAON,EAAP,KAAmBS,EAAnB,KACA,EAA6BH,oBAAS,GAAtC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAuCL,mBAAS,IAAhD,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAuBP,mBAAS,GAAhC,mBAAOQ,EAAP,KAAYC,EAAZ,KACA,EAA6BT,mBAAS,IAAtC,mBAAOZ,EAAP,KAAesB,EAAf,KACA,EAAqCV,mBAAS,IAA9C,mBAAOW,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRR,GAAW,GACbT,EAAMkB,IAAI,YACTC,MAAK,SAAAC,GACJX,GAAW,GACK,MAAfW,EAAIC,SACLhB,EAAkBe,EAAI9C,KAAKgD,OAAOC,gBAClCjB,EAAkBc,EAAI9C,KAAKgD,OAAOE,gBAClCjB,EAAea,EAAI9C,KAAKgD,OAAOG,aAC/Bd,EAAgBS,EAAI9C,OAEtBoD,QAAQC,IAAIP,MAEXQ,OAAM,SAAAC,GAAK,OAAEH,QAAQC,IAAID,QAAQG,cAChC,IAEF,IAAMC,EAA6B,SAACC,EAAYC,EAAKC,GACnDjC,EAAMkB,IAAN,mBAAsBa,EAAtB,kCAA2DC,EAA3D,yBAAgFC,EAAhF,eACDd,MAAK,SAAAC,GACJM,QAAQC,IAAIP,GACZ,IAAMc,EAAmBd,EAAI9C,KAAK6D,KAAI,SAAAC,GAAC,OAAGA,EAAEC,SACtCC,EAAe5B,EAAa6B,UAAUC,MAAK,SAAAhD,GAAO,OAAIA,EAAQiD,OAASV,KAC7Ef,EAAekB,GACf7B,EAAkBiC,EAAaf,gBAC/BjB,EAAkBgC,EAAad,gBAC/BjB,EAAe+B,EAAab,gBAG7BG,OAAM,SAAAc,GAAG,OAAEhB,QAAQC,IAAIe,OAGlBC,EAAa,SAACC,GAClB,IAAMR,EAAI,IAAIS,KAAKD,GACbE,EAAOV,EAAEW,cACTC,EAAQ,WAAIZ,EAAEa,WAAW,GAAItD,OAAO,GACpCuD,EAAOd,EAAEe,UACf,MAAM,GAAN,OAAUL,EAAV,YAAkBE,EAAlB,YAA2BE,IAuB7B,OAAG1C,EACM,6DAGL,sBAAKrB,UAAU,MAAf,UACE,8BACE,gCAEE,qBAAKjB,MAAO,CACVkF,QAAQ,OACRC,WAAW,SACXC,eAAe,UAHjB,SAKE,cAAC,EAAD,CACA1D,eAAgBA,EAChBC,eAAgBA,EAChBC,YAAaA,EACbN,QAASA,MAGX,gCACE,yBAAQJ,MAAOI,EAAS+D,SAzCf,SAACC,GACtB1C,EAAW0C,EAAEC,OAAOrE,OACpB,IAAMgD,EAAG,IAAIS,KACPZ,EAAKU,EAAWP,GAChBJ,EAAOW,EAAWP,EAAEsB,QAAQtB,EAAEe,UAAUvC,IAG9CkB,EAA2B0B,EAAEC,OAAOrE,MAAM4C,EAAKC,IAkCnC,UACE,wBAAQ7C,MAAM,GAAd,iBACCsB,EAAa6B,WAAa7B,EAAa6B,UAAUJ,KAAI,SAAA3C,GAAO,OAC3D,wBAA2BJ,MAAOI,EAAQiD,KAA1C,SAAiDjD,EAAQmE,SAA5CnE,EAAQiD,YAEzB,yBAAQrD,MAAOwB,EAAM2C,SApCb,SAACC,GACnB3C,EAAQ2C,EAAEC,OAAOrE,OACjB,IAAMgD,EAAG,IAAIS,KACTZ,EAAKU,EAAWP,GAChBJ,EAAOW,EAAWP,EAAEsB,QAAQtB,EAAEe,UAAUK,EAAEC,OAAOrE,QACvD0C,EAA2BtC,EAAQwC,EAAKC,IA+B5B,UACE,wBAAQ7C,MAAM,IAAd,yBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,qCAKR,cAAC,EAAD,CAAWV,MAAOqC,QCxGxB6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.42c6a4b8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineGraph(props) {\n  return (\n    <div\n    style={{\n        width:'600px',\n        height:'600px',\n        margin: '50px auto'\n    }}\n    >\n      <Line\n        data={{\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\"],\n          datasets: [\n            {\n              label: \"# of Cases\",\n              data: props.yAxis,\n              lineTension:0.1,\n              fill: false,\n              backgroundColor: \"rgb(255, 99, 132)\",\n              borderColor: \"rgba(255, 99, 132, 0.2)\",\n              pointRadius:1\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function Card({title,card}) {\n\n    return (\n        <div className=\"card\">\n            <span>Total {title} : <NumberFormat \n                                    value={card}\n                                    displayType={'text'}\n                                    thousandSeparator={true}\n                            /></span>\n                \n        \n        </div>\n    )\n}\n","import React from 'react'\nimport Card from './Card'\n\n\nfunction CovidSummary(props) {\n\nconst country='';\n\n\n    return (\n        <div>\n            <h1> {props.country === '' ? 'WorldWide' : props.country.charAt(0).toUpperCase()+props.country.slice(1)} Covid-19 Report</h1>\n            \n            <Card title=\"Confirmed\" card={props.totalConfirmed}/>\n            <Card title=\"Recovered\" card={props.totalRecovered}/>\n            <Card title=\"Deaths\" card={props.totalDeaths}/>\n            \n        </div>\n    )\n}\n\nexport default CovidSummary\n","import axios from 'axios'\n\nconst axiosInstance = axios.create({\n    baseURL:`https://api.covid19api.com`\n})\n\nexport default axiosInstance;","import React,{useEffect,useState} from \"react\";\nimport \"./App.css\";\nimport LineGraph from \"./components/LineGraph\";\nimport CovidSummary from \"./components/CovidSummary\";\nimport axios from './axios'\n\nfunction App() {\n\nconst [totalConfirmed,setTotalConfirmed] = useState(0);\nconst [totalRecovered,setTotalRecovered] = useState(0)\nconst [totalDeaths,setTotalDeaths] = useState(0);\nconst [loading,setLoading] = useState(false)\nconst [covidSummary,setCovidSummary] = useState({})\nconst [days,setDays] = useState(7)\nconst [country,setCountry] = useState('')\nconst [coronaCount,setCoronaCount] = useState([])\n\nuseEffect(()=> {\n  setLoading(true)\naxios.get('/summary')\n.then(res => {\n  setLoading(false)\nif(res.status === 200){\n  setTotalConfirmed(res.data.Global.TotalConfirmed)\n  setTotalRecovered(res.data.Global.TotalRecovered)\n  setTotalDeaths(res.data.Global.TotalDeaths)\n  setCovidSummary(res.data)\n}\nconsole.log(res)\n})\n.catch(error=>console.log(console.error()))\n},[])\n\nconst getCoronaReportByDateRange = (countrySlug,from,to) => {\n  axios.get(`/country/${countrySlug}/status/confirmed?from=${from}T00:00:00Z&to=${to}T00:00:00Z`)\n.then(res=>{\n  console.log(res)\n  const yAxisCoronaCount = res.data.map(d=> d.Cases)\n  const covidDetails = covidSummary.Countries.find(country => country.Slug === countrySlug)\n  setCoronaCount(yAxisCoronaCount)\n  setTotalConfirmed(covidDetails.TotalConfirmed)\n  setTotalRecovered(covidDetails.TotalRecovered)\n  setTotalDeaths(covidDetails.TotalDeaths)\n\n})\n.catch(err=>console.log(err))\n}\n\nconst formatDate = (date) => {\n  const d = new Date(date);\n  const year = d.getFullYear();\n  const month = `0${d.getMonth()+1}`.slice(-2);\n  const _date= d.getDate()\n  return `${year}-${month}-${_date}`\n}\n\nconst countryHandler=(e)=>{\nsetCountry(e.target.value)\nconst d= new Date();\nconst to = formatDate(d);\nconst from = formatDate(d.setDate(d.getDate()-days))\n\n// console.log(from,to)\ngetCoronaReportByDateRange(e.target.value,from,to)\n}\n\nconst daysHandler = (e)=>{\n  setDays(e.target.value)\n  const d= new Date();\nconst to = formatDate(d);\nconst from = formatDate(d.setDate(d.getDate()-e.target.value))\ngetCoronaReportByDateRange(country,from,to)\n}\n\n\n\nif(loading){\n  return <p>fetching data from server...</p>\n}\n  return (\n    <div className=\"App\">\n      <div>\n        <div>\n         \n          <div style={{\n            display:'flex',\n            alignItems:'center',\n            justifyContent:'center'\n          }}>\n            <CovidSummary\n            totalConfirmed={totalConfirmed}\n            totalRecovered={totalRecovered}\n            totalDeaths={totalDeaths}\n            country={country}\n            />\n          </div>\n          <div>\n            <select value={country} onChange={countryHandler}>\n              <option value=\"\">All</option>\n              {covidSummary.Countries && covidSummary.Countries.map(country => \n                <option key={country.Slug} value={country.Slug}>{country.Country}</option>)}\n            </select>\n            <select value={days} onChange={daysHandler}>\n              <option value=\"7\">Last 7 Days</option>\n              <option value=\"30\">Last 30 days</option>\n              <option value=\"90\">Last 90 days</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <LineGraph yAxis={coronaCount}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}